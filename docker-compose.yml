version: "3.7"

services:
  db:
    container_name: postgres_test
    image: postgres:latest
    restart: always
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_USER=${TEST_POSTGRES_USER}
      - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD}
      - POSTGRES_DB=${TEST_POSTGRES_DB}
      - POSTGRES_PORT=${TEST_POSTGRES_PORT}
    volumes:
      - ./init/:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U local -d local -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    depends_on:
      - db
    image: arigaio/atlas:latest
    volumes:
      - "./db:/var/lib/database"
    command: >
      schema apply \
        --auto-approve \
        --url "postgres://local:local_pwd@postgres_test:5432/local?sslmode=disable" \
        --to "file://var/lib/database/schema.hcl" \
        --dev-url "postgres://local:local_pwd@postgres_test:5432/local?sslmode=disable"

  vscode:
    build: .
    depends_on:
      - db
    volumes:
      - ./:/workspace
      # Docker
      - ~/.docker:/root/.docker:z
      # Docker socket to access Docker server
      - /var/run/docker.sock:/var/run/docker.sock
      # SSH directory for Linux, OSX and WSL
      # On Linux and OSX, a symlink /mnt/ssh <-> ~/.ssh is
      # created in the container. On Windows, files are copied
      # from /mnt/ssh to ~/.ssh to fix permissions.
      - ~/.ssh:/mnt/ssh
      # Shell history persistence
      - ~/.zsh_history:/root/.zsh_history:z
      # Git config
      - ~/.gitconfig:/root/.gitconfig:z
      # Kubernetes
      - ~/.kube:/root/.kube:z
    environment:
      - TZ=Armenia/Yerevan
      - LC_ALL=C.UTF-8
    cap_add:
      # For debugging with dlv
      - SYS_PTRACE
    security_opt:
      # For debugging with dlv
      - seccomp:unconfined
    entrypoint: [ "zsh", "-c", "while sleep 1000; do :; done" ]
    links:
      - db
      - kafka

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

volumes:
  db:
  db_test:
